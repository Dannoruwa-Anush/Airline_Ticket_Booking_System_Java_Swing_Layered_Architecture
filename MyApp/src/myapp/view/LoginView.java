/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package myapp.view;

import myapp.view.user.UserDashboardView;
import myapp.view.staff.AdminDashboardView;
import java.util.Arrays;
import myapp.controller.UserController;
import myapp.dto.user.UserLoginRequestDTO;
import myapp.dto.user.UserResponseDTO;
import myapp.util.audit.AuditUtil;
import myapp.util.commonTask.CommonTask;
import myapp.util.commonUI.CommonMessageBoxUI;
import myapp.util.enums.UserRoleEnum;
import myapp.util.formValidation.FormValidationUtil;

/**
 *
 * @author HP
 */
public class LoginView extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    private final UserController userController;

    public LoginView() {
        initComponents();

        userController = new UserController();
        
        clearForm();
        initializeUIState();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle1 = new javax.swing.JLabel();
        lblId1 = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        pwd_password = new javax.swing.JPasswordField();
        lblId6 = new javax.swing.JLabel();
        btn_reset = new javax.swing.JButton();
        btn_login = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        lbl_copyright = new javax.swing.JLabel();
        lbl_toRegister = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lblTitle1.setBackground(new java.awt.Color(204, 204, 204));
        lblTitle1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle1.setText("Login");

        lblId1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblId1.setText("Email :");

        pwd_password.setText("jPasswordField1");

        lblId6.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblId6.setText("Password :");

        btn_reset.setText("Reset");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        btn_login.setText("Login");
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });

        jLabel1.setText("Airline Ticket Booking System");

        lbl_copyright.setText("@C");

        lbl_toRegister.setForeground(new java.awt.Color(0, 51, 255));
        lbl_toRegister.setText("Link to registration");
        lbl_toRegister.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbl_toRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_toRegisterMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lbl_copyright)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_toRegister)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblId1)
                            .addComponent(lblId6))
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_reset)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_login))
                            .addComponent(pwd_password)
                            .addComponent(txt_email, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))))
                .addGap(44, 44, 44))
            .addComponent(jSeparator2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblId1)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblId6)
                    .addComponent(pwd_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_login)
                    .addComponent(btn_reset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(lbl_toRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_copyright)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        resetUIAfterOperation();
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        loginUser();
    }//GEN-LAST:event_btn_loginActionPerformed

    private void lbl_toRegisterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_toRegisterMouseClicked
        CommonTask.switchView(this, new RegistrationView());
    }//GEN-LAST:event_lbl_toRegisterMouseClicked

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new LoginView().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_login;
    private javax.swing.JButton btn_reset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblId1;
    private javax.swing.JLabel lblId6;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lbl_copyright;
    private javax.swing.JLabel lbl_toRegister;
    private javax.swing.JPasswordField pwd_password;
    private javax.swing.JTextField txt_email;
    // End of variables declaration//GEN-END:variables

    //------------ [ Start - btn handle] -------------
    private void initCommonLabels() {
        lbl_copyright.setText("@Dannoruwa-Anush 2025");
        lbl_toRegister.setText("<html><u>Don't have an account? Register</u></html>");
    }

    //-------------------||||||| Start : input field validation |||||||---------
    private boolean isInputFieldsValid() {
        String email = txt_email.getText().trim();
        String password = new String(pwd_password.getPassword()).trim();

        StringBuilder errorMessage = new StringBuilder();

        if (!FormValidationUtil.isValidEmail(email)) {
            errorMessage.append("Invalid email.\n");
        }

        if (!FormValidationUtil.isValidTxtField(password)) {
            errorMessage.append("Invalid password.\n");
        }

        // Clear password immediately after validation
        Arrays.fill(pwd_password.getPassword(), '\0');

        // If any validation error exists, show all in a single dialog
        if (errorMessage.length() > 0) {
            CommonMessageBoxUI.showOperationFailMessageBox(this, errorMessage.toString());
            return false;
        }

        return true;
    }
    //-------------------||||||| End : input field validation |||||||-----------

    //*******[Start : login] *******
    private void loginUser() {
        if (!isInputFieldsValid()) {
            return;
        }
        try {
            UserLoginRequestDTO userLoginRequestDTO = new UserLoginRequestDTO(
                    txt_email.getText().trim(),
                    new String(pwd_password.getPassword()).trim()
            );

            UserResponseDTO loggedUser = userController.loginUser(userLoginRequestDTO);
            
            // Clear password immediately after use
            Arrays.fill(pwd_password.getPassword(), '\0');            
            postOperation(loggedUser);
        } catch (Exception ex) {
            AuditUtil.logException(this.getClass(), ex);
            CommonMessageBoxUI.showOperationFailMessageBox(this, "Invalid email or password");
            
            // Ensure password data is cleared no matter what
            Arrays.fill(pwd_password.getPassword(), '\0');
        }
    }
    //*******[End : login] *******
    
    //****** [Start : Reset] ***************
    private void clearForm() {
        resetInputFields();
    }

    private void resetInputFields() {
        txt_email.setText("");
        pwd_password.setText("");
    }

    private void initializeUIState() {
        initCommonLabels();
    }

    private void postOperation(UserResponseDTO loggedUser) {
        resetUIAfterOperation();
        
        int userId = loggedUser.getUserId();
        String userName = loggedUser.getUserName();
        String role = loggedUser.getUserRole().getRole_name();

        if (UserRoleEnum.ADMIN.getRoleName().equals(role)) {
            CommonTask.switchView(this, new AdminDashboardView(userName));
        } else if (UserRoleEnum.PASSENGER.getRoleName().equals(role)) {
            CommonTask.switchView(this, new UserDashboardView(userName, userId));
        }
    }

    private void resetUIAfterOperation() {
        clearForm();
        initializeUIState();
    }
    //****** [End : Reset] ***************
    //------------ [ End - btn handle] ---------------
}
