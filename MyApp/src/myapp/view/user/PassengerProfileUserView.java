/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package myapp.view.user;

import java.awt.Cursor;
import myapp.controller.PassengerProfileController;
import myapp.dto.passengerProfile.PassengerProfileRequestDTO;
import myapp.dto.passengerProfile.PassengerProfileResponseDTO;
import myapp.util.audit.AuditUtil;
import myapp.util.commonTask.CommonTask;
import myapp.util.commonUI.CommonMessageBoxUI;
import myapp.util.formValidation.FormValidationUtil;
import myapp.view.LoginView;

/**
 *
 * @author HP
 */
public class PassengerProfileUserView extends javax.swing.JFrame {

    /**
     * Creates new form PassengerProfileView
     */
    private final PassengerProfileController passengerProfileController;

    private final String userName;
    private final int userId;
    private final PassengerProfileResponseDTO passengerProfile;

    public PassengerProfileUserView(String userName, int userId, PassengerProfileResponseDTO passengerProfile) {
        initComponents();

        this.userName = userName;
        this.userId = userId;

        this.passengerProfile = passengerProfile;
        passengerProfileController = new PassengerProfileController();

        initializeUIState();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblId2 = new javax.swing.JLabel();
        txt_fullName = new javax.swing.JTextField();
        lblId1 = new javax.swing.JLabel();
        txt_passportNo = new javax.swing.JTextField();
        btn_reset = new javax.swing.JButton();
        btn_add = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        lbl_copyright = new javax.swing.JLabel();
        lblId3 = new javax.swing.JLabel();
        txt_nationality = new javax.swing.JTextField();
        lblId9 = new javax.swing.JLabel();
        lblId10 = new javax.swing.JLabel();
        lblTitle1 = new javax.swing.JLabel();
        btn_back = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        lbl_loggedUser = new javax.swing.JLabel();
        txt_contactNo = new javax.swing.JTextField();
        txt_emergencyContactNo = new javax.swing.JTextField();
        btn_update = new javax.swing.JButton();
        lbl_logout = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lblId2.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblId2.setText("Full Name : ");

        lblId1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblId1.setText("Passport No :");

        btn_reset.setText("Reset");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        btn_add.setText("Add");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        jLabel1.setText("Airline Ticket Booking System");

        lbl_copyright.setText("@C");

        lblId3.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblId3.setText("Nationality :");

        lblId9.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblId9.setText("Contact No :");

        lblId10.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblId10.setText("Emergency Contact No :");

        lblTitle1.setBackground(new java.awt.Color(204, 204, 204));
        lblTitle1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle1.setText("Passenger Profile");

        btn_back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myapp/resource/img/back-arrow.jpg"))); // NOI18N
        btn_back.setBorder(null);
        btn_back.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btn_back.setMaximumSize(new java.awt.Dimension(39, 16));
        btn_back.setMinimumSize(new java.awt.Dimension(39, 16));
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        lbl_loggedUser.setForeground(new java.awt.Color(0, 51, 255));
        lbl_loggedUser.setText("(username)");

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        lbl_logout.setForeground(new java.awt.Color(0, 51, 255));
        lbl_logout.setText("(logout)");
        lbl_logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbl_logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_logoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_reset)
                        .addGap(18, 18, 18)
                        .addComponent(btn_update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_add))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblId3)
                                    .addComponent(lblId2)
                                    .addComponent(lblId1))
                                .addGap(81, 81, 81)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_nationality, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_passportNo)
                                    .addComponent(txt_fullName)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblId9)
                                    .addComponent(lblId10))
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_contactNo)
                                    .addComponent(txt_emergencyContactNo))))))
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lbl_logout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_loggedUser)
                .addGap(33, 33, 33))
            .addComponent(jSeparator2)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(lbl_copyright)))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_loggedUser)
                    .addComponent(lbl_logout))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblId2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_fullName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblId1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_passportNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_nationality, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId9)
                    .addComponent(txt_contactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId10)
                    .addComponent(txt_emergencyContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add)
                    .addComponent(btn_reset)
                    .addComponent(btn_update))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_copyright)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        resetUIAfterOperation();
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        addPassengerProfile();
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        CommonTask.switchView(this, new UserDashboardView(this.userName, this.userId));
    }//GEN-LAST:event_btn_backActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        updatePassengerProfile();
    }//GEN-LAST:event_btn_updateActionPerformed

    private void lbl_logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_logoutMouseClicked
        CommonTask.switchView(this, new LoginView());
    }//GEN-LAST:event_lbl_logoutMouseClicked

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(PassengerProfileView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(PassengerProfileView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(PassengerProfileView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(PassengerProfileView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new PassengerProfileView().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblId1;
    private javax.swing.JLabel lblId10;
    private javax.swing.JLabel lblId2;
    private javax.swing.JLabel lblId3;
    private javax.swing.JLabel lblId9;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lbl_copyright;
    private javax.swing.JLabel lbl_loggedUser;
    private javax.swing.JLabel lbl_logout;
    private javax.swing.JTextField txt_contactNo;
    private javax.swing.JTextField txt_emergencyContactNo;
    private javax.swing.JTextField txt_fullName;
    private javax.swing.JTextField txt_nationality;
    private javax.swing.JTextField txt_passportNo;
    // End of variables declaration//GEN-END:variables

    //--------------------- [ Start - btn handle] ------------------------------
    private void initCommonLabels() {
        lbl_loggedUser.setText("( " + this.userName + " )");
        lbl_logout.setText("<html><u>(Logout)</u></html>");
        lbl_logout.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        lbl_copyright.setText("@Dannoruwa-Anush 2025");
    }
    //-------------------||||||| Start : input field validation |||||||---------

    private void setCrudButtonsVisibilityForTableSelection(boolean isUpdating) {
        btn_add.setVisible(!isUpdating); // hide add when row selected
        btn_update.setVisible(isUpdating);
        btn_reset.setVisible(isUpdating);
    }

    private boolean isInputFieldsValid() {
        return isPassengerUserIdValid() && isFullNameValid() && isPassportNoValid() && isNationalityValid() && isContactNumbersValid();
    }

    private boolean isPassengerUserIdValid() {
        if (!FormValidationUtil.isIdSelectionValid(userId)) {
            CommonMessageBoxUI.showOperationFailMessageBox(this, "Passenger user id cannot be null");
            return false;
        }
        return true;
    }

    private boolean isFullNameValid() {
        String name = txt_fullName.getText().trim();
        if (!FormValidationUtil.isValidTxtField(name)) {
            CommonMessageBoxUI.showOperationFailMessageBox(this, "Full name cannot be empty.");
            return false;
        }
        return true;
    }

    private boolean isPassportNoValid() {
        String passportNo = txt_passportNo.getText().trim();
        if (!FormValidationUtil.isValidTxtField(passportNo)) {
            CommonMessageBoxUI.showOperationFailMessageBox(this, "Passport no cannot be empty.");
            return false;
        }
        return true;
    }

    private boolean isNationalityValid() {
        String nationality = txt_nationality.getText().trim();
        if (!FormValidationUtil.isValidTxtField(nationality)) {
            CommonMessageBoxUI.showOperationFailMessageBox(this, "Nationality cannot be empty.");
            return false;
        }
        return true;
    }

    private boolean isContactNumbersValid() {
        String contactNo = txt_contactNo.getText().trim();
        String emergencyContactNo = txt_emergencyContactNo.getText().trim();
        if (!FormValidationUtil.isValidPhoneNumber(contactNo) || !FormValidationUtil.isValidPhoneNumber(emergencyContactNo)) {
            CommonMessageBoxUI.showOperationFailMessageBox(this, "Contact numbers are not valid.");
            return false;
        }
        return true;
    }
    //----------------||||||| End : input field validation |||||||-----------

    private PassengerProfileRequestDTO buildPassengerProfileRequestDTO() {
        return new PassengerProfileRequestDTO(
                userId,
                txt_fullName.getText().trim(),
                txt_passportNo.getText().trim(),
                txt_nationality.getText().trim(),
                txt_contactNo.getText().trim(),
                txt_emergencyContactNo.getText().trim()
        );
    }

    //****** [Start : add] ***************
    private void addPassengerProfile() {
        if (!isInputFieldsValid()) {
            return;
        }
        try {
            PassengerProfileRequestDTO passengerProfileRequestDTO = buildPassengerProfileRequestDTO();
            String result = passengerProfileController.addPassengerProfile(passengerProfileRequestDTO);
            postOperationSuccess(result);
        } catch (Exception ex) {
            AuditUtil.logException(this.getClass(), ex);
            CommonMessageBoxUI.showOperationFailMessageBox(this, "Failed to save passenger profile.");
        }
    }
    //****** [End : add] ***************

    //****** [Start : update] ***************
    private void updatePassengerProfile() {
        if (!showUpdateConfirmation()) {
            return;
        }

        Integer id = this.passengerProfile.getPassengerId();

        if (!isInputFieldsValid()) {
            return;
        }

        try {
            performUpdate(id);
        } catch (Exception ex) {
            AuditUtil.logException(this.getClass(), ex);
            CommonMessageBoxUI.showOperationFailMessageBox(this, "Failed to save passenger profile.");
        }
    }

    private boolean showUpdateConfirmation() {
        return CommonMessageBoxUI.showOkCancelConfirmationMessageBox(
                this,
                "Are you sure you want to update your profile?",
                "Confirm Update"
        );
    }

    private void performUpdate(Integer id) throws Exception {
        PassengerProfileRequestDTO passengerProfileRequestDTO = buildPassengerProfileRequestDTO();
        String result = passengerProfileController.updatePassengerProfile(id, passengerProfileRequestDTO);
        postOperationSuccess(result);
    }
    //****** [End : update] *****************

    private void LoadPassengerProfile() {
        if (this.passengerProfile != null) {
            txt_fullName.setText(this.passengerProfile.getPassengerFullName());
            txt_passportNo.setText(this.passengerProfile.getPassengerPassportNumber());
            txt_nationality.setText(this.passengerProfile.getPassengerNationality());
            txt_contactNo.setText(this.passengerProfile.getPassengerContactNumber());
            txt_emergencyContactNo.setText(this.passengerProfile.getPassengerEmergencyContactNumber());

            setCrudButtonsVisibilityForTableSelection(true); //show update, reset btn
        } else {
            clearForm();
        }
    }

    //****** [Start : Reset] ***************
    private void clearForm() {
        resetInputFields();
        resetCrudButtonsVisibility();
    }

    private void resetInputFields() {
        txt_fullName.setText("");
        txt_passportNo.setText("");
        txt_nationality.setText("");
        txt_contactNo.setText("");
        txt_emergencyContactNo.setText("");
    }

    private void resetCrudButtonsVisibility() {
        setCrudButtonsVisibilityForTableSelection(false);
    }

    private void initializeUIState() {
        initCommonLabels();
        LoadPassengerProfile();
    }

    private void postOperationSuccess(String message) {
        CommonMessageBoxUI.showOperationSuccessMessageBox(this, message);
        resetUIAfterOperation();

        CommonTask.switchView(this, new UserDashboardView(this.userName, this.userId));
    }

    private void resetUIAfterOperation() {
        clearForm();
        initializeUIState();
    }
    //****** [End : Reset] ***************
}
